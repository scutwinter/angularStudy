<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.java.website.myblog.dao.UserInfoDao">
  <resultMap id="BaseResultMap" type="com.java.website.myblog.entity.UserInfo">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="user_nickname" jdbcType="VARCHAR" property="userNickname" />
    <result column="block" jdbcType="INTEGER" property="block" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, user_name, user_password, user_nickname, block
  </sql>
  <select id="login" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_user
    where user_name = #{userName,jdbcType=VARCHAR} AND user_password=#{password,jdbcType=VARCHAR} AND block = 0
  </select>
  <select id="getUserDetailById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <update id="updatePassword">
    update tb_user
    <set>
      <if test="userPassword != null">
        user_password = #{newPassword,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER} AND user_password=#{originalPassword,jdbcType=VARCHAR}
  </update>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.java.website.myblog.entity.UserInfo">
    insert into tb_user (user_id, user_name, user_password,
      user_nickname, block)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR},
      #{userNickname,jdbcType=VARCHAR}, #{block,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.java.website.myblog.entity.UserInfo">
    insert into tb_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
      <if test="userNickname != null">
        user_nickname,
      </if>
      <if test="block != null">
        block,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userNickname != null">
        #{userNickname,jdbcType=VARCHAR},
      </if>
      <if test="block != null">
        #{block,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.java.website.myblog.entity.UserInfo">
    update tb_user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userNickname != null">
        user_nickname = #{userNickname,jdbcType=VARCHAR},
      </if>
      <if test="block != null">
        block = #{block,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.java.website.myblog.entity.UserInfo">
    update tb_user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_nickname = #{userNickname,jdbcType=VARCHAR},
      block = #{block,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>